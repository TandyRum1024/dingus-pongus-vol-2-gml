// 2018-10-19 01:01:37
//
// Simple passthrough vertex shader
//
attribute vec3 in_Position;                  // (x,y,z)
//attribute vec3 in_Normal;                  // (x,y,z)     unused in this shader.	
attribute vec4 in_Colour;                    // (r,g,b,a)
attribute vec2 in_TextureCoord;              // (u,v)

varying vec2 v_vTexcoord;
varying vec4 v_vColour;

void main()
{
    vec4 object_space_pos = vec4( in_Position.x, in_Position.y, in_Position.z, 1.0);
    gl_Position = gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION] * object_space_pos;
    
    v_vColour = in_Colour;
    v_vTexcoord = in_TextureCoord;
}

//######################_==_YOYO_SHADER_MARKER_==_######################@~//
// Simple passthrough fragment shader
//
varying vec2 v_vTexcoord;
varying vec4 v_vColour;

uniform float uTime;
uniform float uStripThicc;

void main()
{
    vec2 uv = v_vTexcoord;
    vec3 finalColour = vec3(0.0);
    // gl_FragColor = v_vColour * texture2D( gm_BaseTexture, v_vTexcoord );
    vec3 strip1 = vec3(1.0, 0.86, 0.0);
    vec3 strip2 = vec3(0.8, 0.72, 0.05);
    
    // Distort UV so that we got some RAD swirly effect
    uv.x += sin(uv.y * 2.4 + 42.0 - uTime) * 0.5;
    uv.y += cos(uv.x * 4.2 - 42.0 + uTime) * 0.5;
    
    // Make stripe
    finalColour = mix(strip1, strip2, floor(fract(uv.y * uStripThicc + uTime) + 0.5));
    
    gl_FragColor = vec4(finalColour, 1.0);
}

